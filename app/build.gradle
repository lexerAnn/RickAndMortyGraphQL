plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id("com.apollographql.apollo3").version("3.7.3")
}
//apply plugin: "com.apollographql.apollo3"






android {
    namespace 'com.kola.market.rickandmortygraphql'
    compileSdk 33

    defaultConfig {
        applicationId "com.kola.market.rickandmortygraphql"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.squareup.picasso:picasso:2.5.2'


    implementation("com.apollographql.apollo3:apollo-runtime:3.7.3")
    implementation("com.apollographql.apollo3:apollo-api:3.7.3")






    // Network Requests
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // Dagger Hilt
    //hilt
    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-compiler:2.42'


    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'


// coroutine lifecycle scopes
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

    // Room Persistence
    implementation "androidx.room:room-runtime:2.4.3"
    implementation "androidx.room:room-ktx:2.4.3"
    kapt "androidx.room:room-compiler:2.4.3"
    kapt "android.arch.persistence.room:compiler:1.1.1"

    // Security and Storage
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'

    //Material.io
    implementation 'com.google.android.material:material:1.6.1'

    implementation 'org.jsoup:jsoup:1.10.3'
    implementation 'io.umehara:ogmapper:1.0.0'

    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation("androidx.core:core-splashscreen:1.0.0")

    //Mockito
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC3'
    testImplementation 'org.mockito:mockito-core:3.10.0'
    androidTestImplementation 'org.mockito:mockito-android:3.10.0'

    implementation "com.airbnb.android:lottie:3.4.0"

    implementation 'com.localebro:okhttpprofiler:1.0.8'

    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.4.1")


}
apollo {
    service("RickAndMortyGraphQL") {
        packageName.set("com.kola.market.rickandmortygraphql")
    }
    generateKotlinModels.set(true)

}
